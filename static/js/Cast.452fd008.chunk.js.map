{"version":3,"file":"static/js/Cast.452fd008.chunk.js","mappings":"4TACAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EACQ,qBADRA,EAEM,eAFNA,EAGO,SAHPA,EAIO,WAJPA,EAKO,WAEN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBH,IAAAA,IAAA,WAAcE,EAAd,oBAAwCD,IAD5D,cACGG,EADH,yBAEIA,EAASC,MAFb,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,uFACoBP,IAAAA,IAAA,WAAcE,GAAd,OAA8BK,EAA9B,oBAA4CN,EAA5C,oBADpB,cACGG,EADH,yBAGIA,EAASC,MAHb,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACoBP,IAAAA,IAAA,WACfE,GADe,OACCK,GADD,OACML,EADN,oBAC+BD,EAD/B,oBADpB,cACGG,EADH,yBAIIA,EAASC,MAJb,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,uFACoBP,IAAAA,IAAA,WACfE,GADe,OACCK,GADD,OACML,EADN,oBAC+BD,EAD/B,oBADpB,cACGG,EADH,yBAIIA,EAASC,MAJb,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACoBX,IAAAA,IAAA,WACfE,EADe,oBACSD,EADT,kBAC0BU,EAD1B,+CADpB,cACGP,EADH,yBAIIA,EAASC,MAJb,oE,4GC9BP,EAA2B,6B,SCEZ,SAASO,EAAT,GAAsD,IAAhCC,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,MACjDC,EAAMD,EAAK,yCACuBA,GAClC,wDAEN,OACI,2BACI,gBAAKC,IAAKA,EAAKC,MAAM,KAAKC,IAAI,MAC9B,cAAGC,UAAWC,EAAd,SAAgCP,KAChC,eAAGM,UAAWC,EAAd,yBAA4CN,QCPzC,SAASO,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAA0BN,GAASO,MAAK,SAAAC,GAAC,OAAIJ,EAAYI,EAAEC,WAC5D,CAACT,KAGA,+BACI,wBACKG,EACIO,KAAI,YAA4C,IAAzCzB,EAAwC,EAAxCA,GAAI0B,EAAoC,EAApCA,KAAMnB,EAA8B,EAA9BA,UAAWoB,EAAmB,EAAnBA,aACzB,OACI,SAACtB,EAAD,CAEIC,UAAWoB,EACXnB,UAAWA,EACXC,MAAOmB,GAHF3B","sources":["services/Api.jsx","webpack://react-homework-template/./src/components/ActorsList/ActorsList.module.css?94a0","components/ActorsList/ActorsList.jsx","views/Cast.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '99f1057047bac17f2e8e4b1a5230a5c2';\nconst PARAM = {\n    trending: 'trending/movie/day',\n    search: 'search/movie',\n    movieID: 'movie/',\n    reviews: '/reviews',\n    credits: '/credits',\n};\nexport async function getTrandingFilms() {\n    const response = await axios.get(`/${PARAM.trending}?api_key=${API_KEY}`);\n    return response.data;\n};\nexport async function getMovieId(id) {\n    const response = await axios.get(`/${PARAM.movieID}${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n};\nexport async function getMovieIdReviews(id) {\n    const response = await axios.get(\n        `/${PARAM.movieID}${id}${PARAM.reviews}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n};\nexport async function getCastMovieId(id) {\n    const response = await axios.get(\n        `/${PARAM.movieID}${id}${PARAM.credits}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n};\nexport async function getSearchMovies(query) {\n    const response = await axios.get(\n        `/${PARAM.search}?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"ActorsList_subtitle__LKvnW\"};","import PropTypes from 'prop-types';\nimport styles from './ActorsList.module.css'\n\nexport default function ActorsList({ actorName, character, photo }) {\n    const src = photo\n        ? `https://image.tmdb.org/t/p/w200${photo}`\n        : 'https://nuft.edu.ua/assets/images/people/no-image.jpg';\n\n    return (\n        <li>\n            <img src={src} width='80' alt=\"\" />\n            <p className={styles.subtitle}>{actorName}</p>\n            <p className={styles.subtitle}> Character: {character}</p>\n        </li>\n    );\n}\nActorsList.propTypes = {\n    actorName: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    photo: PropTypes.string,\n};","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport * as serviceApi from '../services/Api';\nimport ActorsList from '../components/ActorsList/ActorsList';\n\nexport default function Cast() {\n    const { movieId } = useParams();\n    const [castInfo, setCastInfo] = useState([])\n\n    useEffect(() => {\n        serviceApi.getCastMovieId(movieId).then(r => setCastInfo(r.cast));\n    }, [movieId])\n\n    return (\n        <>\n            <ul>\n                {castInfo\n                    .map(({ id, name, character, profile_path }) => {\n                        return (\n                            <ActorsList\n                                key={id}\n                                actorName={name}\n                                character={character}\n                                photo={profile_path}\n                            />\n                        );\n                    })}\n            </ul>\n        </>\n    )\n}"],"names":["axios","API_KEY","PARAM","getTrandingFilms","response","data","getMovieId","id","getMovieIdReviews","getCastMovieId","getSearchMovies","query","ActorsList","actorName","character","photo","src","width","alt","className","styles","Cast","movieId","useParams","useState","castInfo","setCastInfo","useEffect","serviceApi","then","r","cast","map","name","profile_path"],"sourceRoot":""}