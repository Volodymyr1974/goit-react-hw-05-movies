{"version":3,"file":"static/js/Reviews.5890e6ec.chunk.js","mappings":"4TACAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EACQ,qBADRA,EAEM,eAFNA,EAGO,SAHPA,EAIO,WAJPA,EAKO,WAEN,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBH,IAAAA,IAAA,WAAcE,EAAd,oBAAwCD,IAD5D,cACGG,EADH,yBAEIA,EAASC,MAFb,kEAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,uFACoBP,IAAAA,IAAA,WAAcE,GAAd,OAA8BK,EAA9B,oBAA4CN,EAA5C,oBADpB,cACGG,EADH,yBAGIA,EAASC,MAHb,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACoBP,IAAAA,IAAA,WACfE,GADe,OACCK,GADD,OACML,EADN,oBAC+BD,EAD/B,oBADpB,cACGG,EADH,yBAIIA,EAASC,MAJb,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,uFACoBP,IAAAA,IAAA,WACfE,GADe,OACCK,GADD,OACML,EADN,oBAC+BD,EAD/B,oBADpB,cACGG,EADH,yBAIIA,EAASC,MAJb,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACoBX,IAAAA,IAAA,WACfE,EADe,oBACSD,EADT,kBAC0BU,EAD1B,+CADpB,cACGP,EADH,yBAIIA,EAASC,MAJb,oE,sHC7BQ,SAASO,EAAT,GAA0C,IAAnBC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC1C,OACI,2BACI,oCAAYD,EAAZ,QACA,uBAAIC,OCDD,SAASC,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,IAHAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAA6BN,GAASO,MAAK,SAAAC,GAAC,OAAIJ,EAAWI,EAAEC,cAC9D,CAACT,IACCG,EAGL,OACI,gCACKA,EAAQO,OAAS,IACd,wBACKP,EAAQQ,KAAI,YAA8B,IAA3BpB,EAA0B,EAA1BA,GAAIM,EAAsB,EAAtBA,OAAQe,EAAc,EAAdA,QACxB,OACI,SAAChB,EAAD,CAAsBC,OAAQA,EAAQC,OAAQc,GAA5BrB,QAId,IAAnBY,EAAQO,SACL","sources":["services/Api.jsx","components/ReviewsList/ReviewsList.jsx","views/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '99f1057047bac17f2e8e4b1a5230a5c2';\nconst PARAM = {\n    trending: 'trending/movie/day',\n    search: 'search/movie',\n    movieID: 'movie/',\n    reviews: '/reviews',\n    credits: '/credits',\n};\nexport async function getTrandingFilms() {\n    const response = await axios.get(`/${PARAM.trending}?api_key=${API_KEY}`);\n    return response.data;\n};\nexport async function getMovieId(id) {\n    const response = await axios.get(`/${PARAM.movieID}${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n};\nexport async function getMovieIdReviews(id) {\n    const response = await axios.get(\n        `/${PARAM.movieID}${id}${PARAM.reviews}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n};\nexport async function getCastMovieId(id) {\n    const response = await axios.get(\n        `/${PARAM.movieID}${id}${PARAM.credits}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n};\nexport async function getSearchMovies(query) {\n    const response = await axios.get(\n        `/${PARAM.search}?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return response.data;\n};\n","import PropTypes from 'prop-types';\n\nexport default function ReviewsList({ author, review }) {\n    return (\n        <li>\n            <h2>Author:{author} </h2>\n            <p>{review}</p>\n        </li>\n    );\n}\nReviewsList.propTypes = {\n    author: PropTypes.string.isRequired,\n    review: PropTypes.string.isRequired,\n};","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport * as serviceApi from '../services/Api';\nimport ReviewsList from '../components/ReviewsList/ReviewsList';\n\nexport default function Reviews() {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState(null)\n\n    useEffect(() => {\n        serviceApi.getMovieIdReviews(movieId).then(r => setReviews(r.results));\n    }, [movieId])\n    if (!reviews) {\n        return;\n    }\n    return (\n        <>\n            {reviews.length > 0 && (\n                <ul>\n                    {reviews.map(({ id, author, content }) => {\n                        return (\n                            <ReviewsList key={id} author={author} review={content} />\n                        );\n                    })}\n                </ul>)}\n            {reviews.length === 0 && (\n                <p>We don`t have any Reviews for this movie</p>)\n            }\n        </>\n    )\n}"],"names":["axios","API_KEY","PARAM","getTrandingFilms","response","data","getMovieId","id","getMovieIdReviews","getCastMovieId","getSearchMovies","query","ReviewsList","author","review","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","serviceApi","then","r","results","length","map","content"],"sourceRoot":""}